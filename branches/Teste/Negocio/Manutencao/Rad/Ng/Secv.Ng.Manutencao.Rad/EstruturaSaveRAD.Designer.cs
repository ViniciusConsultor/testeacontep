//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Acontep.Ng.Manutencao.Rad {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("EstruturaSaveRAD")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class EstruturaSaveRAD : System.Data.DataSet {
        
        private ListaCamposDataTable tableListaCampos;
        
        private MetodoConsultaDataTable tableMetodoConsulta;
        
        private ClasseCRUDDataTable tableClasseCRUD;
        
        private MetodoDataTable tableMetodo;
        
        private VersaoDataTable tableVersao;
        
        private System.Data.DataRelation relationFK_Metodo_ListaCampos;
        
        private System.Data.DataRelation relationClasseCRUD_Metodo;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EstruturaSaveRAD() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected EstruturaSaveRAD(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListaCampos"] != null)) {
                    base.Tables.Add(new ListaCamposDataTable(ds.Tables["ListaCampos"]));
                }
                if ((ds.Tables["MetodoConsulta"] != null)) {
                    base.Tables.Add(new MetodoConsultaDataTable(ds.Tables["MetodoConsulta"]));
                }
                if ((ds.Tables["ClasseCRUD"] != null)) {
                    base.Tables.Add(new ClasseCRUDDataTable(ds.Tables["ClasseCRUD"]));
                }
                if ((ds.Tables["Metodo"] != null)) {
                    base.Tables.Add(new MetodoDataTable(ds.Tables["Metodo"]));
                }
                if ((ds.Tables["Versao"] != null)) {
                    base.Tables.Add(new VersaoDataTable(ds.Tables["Versao"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListaCamposDataTable ListaCampos {
            get {
                return this.tableListaCampos;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MetodoConsultaDataTable MetodoConsulta {
            get {
                return this.tableMetodoConsulta;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ClasseCRUDDataTable ClasseCRUD {
            get {
                return this.tableClasseCRUD;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MetodoDataTable Metodo {
            get {
                return this.tableMetodo;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VersaoDataTable Versao {
            get {
                return this.tableVersao;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            EstruturaSaveRAD cln = ((EstruturaSaveRAD)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ListaCampos"] != null)) {
                    base.Tables.Add(new ListaCamposDataTable(ds.Tables["ListaCampos"]));
                }
                if ((ds.Tables["MetodoConsulta"] != null)) {
                    base.Tables.Add(new MetodoConsultaDataTable(ds.Tables["MetodoConsulta"]));
                }
                if ((ds.Tables["ClasseCRUD"] != null)) {
                    base.Tables.Add(new ClasseCRUDDataTable(ds.Tables["ClasseCRUD"]));
                }
                if ((ds.Tables["Metodo"] != null)) {
                    base.Tables.Add(new MetodoDataTable(ds.Tables["Metodo"]));
                }
                if ((ds.Tables["Versao"] != null)) {
                    base.Tables.Add(new VersaoDataTable(ds.Tables["Versao"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableListaCampos = ((ListaCamposDataTable)(base.Tables["ListaCampos"]));
            if ((initTable == true)) {
                if ((this.tableListaCampos != null)) {
                    this.tableListaCampos.InitVars();
                }
            }
            this.tableMetodoConsulta = ((MetodoConsultaDataTable)(base.Tables["MetodoConsulta"]));
            if ((initTable == true)) {
                if ((this.tableMetodoConsulta != null)) {
                    this.tableMetodoConsulta.InitVars();
                }
            }
            this.tableClasseCRUD = ((ClasseCRUDDataTable)(base.Tables["ClasseCRUD"]));
            if ((initTable == true)) {
                if ((this.tableClasseCRUD != null)) {
                    this.tableClasseCRUD.InitVars();
                }
            }
            this.tableMetodo = ((MetodoDataTable)(base.Tables["Metodo"]));
            if ((initTable == true)) {
                if ((this.tableMetodo != null)) {
                    this.tableMetodo.InitVars();
                }
            }
            this.tableVersao = ((VersaoDataTable)(base.Tables["Versao"]));
            if ((initTable == true)) {
                if ((this.tableVersao != null)) {
                    this.tableVersao.InitVars();
                }
            }
            this.relationFK_Metodo_ListaCampos = this.Relations["FK_Metodo_ListaCampos"];
            this.relationClasseCRUD_Metodo = this.Relations["ClasseCRUD_Metodo"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "EstruturaSaveRAD";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/EstruturaSaveRAD.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableListaCampos = new ListaCamposDataTable();
            base.Tables.Add(this.tableListaCampos);
            this.tableMetodoConsulta = new MetodoConsultaDataTable();
            base.Tables.Add(this.tableMetodoConsulta);
            this.tableClasseCRUD = new ClasseCRUDDataTable();
            base.Tables.Add(this.tableClasseCRUD);
            this.tableMetodo = new MetodoDataTable();
            base.Tables.Add(this.tableMetodo);
            this.tableVersao = new VersaoDataTable();
            base.Tables.Add(this.tableVersao);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("FK_Metodo_ListaCampos", new System.Data.DataColumn[] {
                        this.tableMetodo.IDColumn}, new System.Data.DataColumn[] {
                        this.tableListaCampos.IDMetodoColumn});
            this.tableListaCampos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new System.Data.ForeignKeyConstraint("ClasseCRUD_Metodo", new System.Data.DataColumn[] {
                        this.tableClasseCRUD.IDColumn}, new System.Data.DataColumn[] {
                        this.tableMetodo.IDClasseColumn});
            this.tableMetodo.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationFK_Metodo_ListaCampos = new System.Data.DataRelation("FK_Metodo_ListaCampos", new System.Data.DataColumn[] {
                        this.tableMetodo.IDColumn}, new System.Data.DataColumn[] {
                        this.tableListaCampos.IDMetodoColumn}, false);
            this.Relations.Add(this.relationFK_Metodo_ListaCampos);
            this.relationClasseCRUD_Metodo = new System.Data.DataRelation("ClasseCRUD_Metodo", new System.Data.DataColumn[] {
                        this.tableClasseCRUD.IDColumn}, new System.Data.DataColumn[] {
                        this.tableMetodo.IDClasseColumn}, false);
            this.relationClasseCRUD_Metodo.Nested = true;
            this.Relations.Add(this.relationClasseCRUD_Metodo);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListaCampos() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMetodoConsulta() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeClasseCRUD() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMetodo() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVersao() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            EstruturaSaveRAD ds = new EstruturaSaveRAD();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ListaCamposRowChangeEventHandler(object sender, ListaCamposRowChangeEvent e);
        
        public delegate void MetodoConsultaRowChangeEventHandler(object sender, MetodoConsultaRowChangeEvent e);
        
        public delegate void ClasseCRUDRowChangeEventHandler(object sender, ClasseCRUDRowChangeEvent e);
        
        public delegate void MetodoRowChangeEventHandler(object sender, MetodoRowChangeEvent e);
        
        public delegate void VersaoRowChangeEventHandler(object sender, VersaoRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListaCamposDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnIDMetodo;
            
            private System.Data.DataColumn columnNome;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposDataTable() {
                this.TableName = "ListaCampos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListaCamposDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListaCamposDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDMetodoColumn {
                get {
                    return this.columnIDMetodo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NomeColumn {
                get {
                    return this.columnNome;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRow this[int index] {
                get {
                    return ((ListaCamposRow)(this.Rows[index]));
                }
            }
            
            public event ListaCamposRowChangeEventHandler ListaCamposRowChanging;
            
            public event ListaCamposRowChangeEventHandler ListaCamposRowChanged;
            
            public event ListaCamposRowChangeEventHandler ListaCamposRowDeleting;
            
            public event ListaCamposRowChangeEventHandler ListaCamposRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListaCamposRow(ListaCamposRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRow AddListaCamposRow(System.Guid ID, MetodoRow parentMetodoRowByFK_Metodo_ListaCampos, string Nome) {
                ListaCamposRow rowListaCamposRow = ((ListaCamposRow)(this.NewRow()));
                rowListaCamposRow.ItemArray = new object[] {
                        ID,
                        parentMetodoRowByFK_Metodo_ListaCampos[0],
                        Nome};
                this.Rows.Add(rowListaCamposRow);
                return rowListaCamposRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ListaCamposDataTable cln = ((ListaCamposDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ListaCamposDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnIDMetodo = base.Columns["IDMetodo"];
                this.columnNome = base.Columns["Nome"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIDMetodo = new System.Data.DataColumn("IDMetodo", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDMetodo);
                this.columnNome = new System.Data.DataColumn("Nome", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNome);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.Unique = true;
                this.columnIDMetodo.AllowDBNull = false;
                this.columnNome.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRow NewListaCamposRow() {
                return ((ListaCamposRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ListaCamposRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ListaCamposRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListaCamposRowChanged != null)) {
                    this.ListaCamposRowChanged(this, new ListaCamposRowChangeEvent(((ListaCamposRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListaCamposRowChanging != null)) {
                    this.ListaCamposRowChanging(this, new ListaCamposRowChangeEvent(((ListaCamposRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListaCamposRowDeleted != null)) {
                    this.ListaCamposRowDeleted(this, new ListaCamposRowChangeEvent(((ListaCamposRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListaCamposRowDeleting != null)) {
                    this.ListaCamposRowDeleting(this, new ListaCamposRowChangeEvent(((ListaCamposRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListaCamposRow(ListaCamposRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EstruturaSaveRAD ds = new EstruturaSaveRAD();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListaCamposDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MetodoConsultaDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnSQL;
            
            private System.Data.DataColumn columnNomeConsulta;
            
            private System.Data.DataColumn columnString;
            
            private System.Data.DataColumn columnProvider;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaDataTable() {
                this.TableName = "MetodoConsulta";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MetodoConsultaDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MetodoConsultaDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SQLColumn {
                get {
                    return this.columnSQL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NomeConsultaColumn {
                get {
                    return this.columnNomeConsulta;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StringColumn {
                get {
                    return this.columnString;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaRow this[int index] {
                get {
                    return ((MetodoConsultaRow)(this.Rows[index]));
                }
            }
            
            public event MetodoConsultaRowChangeEventHandler MetodoConsultaRowChanging;
            
            public event MetodoConsultaRowChangeEventHandler MetodoConsultaRowChanged;
            
            public event MetodoConsultaRowChangeEventHandler MetodoConsultaRowDeleting;
            
            public event MetodoConsultaRowChangeEventHandler MetodoConsultaRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMetodoConsultaRow(MetodoConsultaRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaRow AddMetodoConsultaRow(System.Guid ID, string SQL, string NomeConsulta, string String, string Provider) {
                MetodoConsultaRow rowMetodoConsultaRow = ((MetodoConsultaRow)(this.NewRow()));
                rowMetodoConsultaRow.ItemArray = new object[] {
                        ID,
                        SQL,
                        NomeConsulta,
                        String,
                        Provider};
                this.Rows.Add(rowMetodoConsultaRow);
                return rowMetodoConsultaRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MetodoConsultaDataTable cln = ((MetodoConsultaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MetodoConsultaDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnSQL = base.Columns["SQL"];
                this.columnNomeConsulta = base.Columns["NomeConsulta"];
                this.columnString = base.Columns["String"];
                this.columnProvider = base.Columns["Provider"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnSQL = new System.Data.DataColumn("SQL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQL);
                this.columnNomeConsulta = new System.Data.DataColumn("NomeConsulta", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomeConsulta);
                this.columnString = new System.Data.DataColumn("String", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnString);
                this.columnProvider = new System.Data.DataColumn("Provider", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.Unique = true;
                this.columnSQL.AllowDBNull = false;
                this.columnNomeConsulta.AllowDBNull = false;
                this.columnString.AllowDBNull = false;
                this.columnProvider.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaRow NewMetodoConsultaRow() {
                return ((MetodoConsultaRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MetodoConsultaRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MetodoConsultaRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MetodoConsultaRowChanged != null)) {
                    this.MetodoConsultaRowChanged(this, new MetodoConsultaRowChangeEvent(((MetodoConsultaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MetodoConsultaRowChanging != null)) {
                    this.MetodoConsultaRowChanging(this, new MetodoConsultaRowChangeEvent(((MetodoConsultaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MetodoConsultaRowDeleted != null)) {
                    this.MetodoConsultaRowDeleted(this, new MetodoConsultaRowChangeEvent(((MetodoConsultaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MetodoConsultaRowDeleting != null)) {
                    this.MetodoConsultaRowDeleting(this, new MetodoConsultaRowChangeEvent(((MetodoConsultaRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMetodoConsultaRow(MetodoConsultaRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EstruturaSaveRAD ds = new EstruturaSaveRAD();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MetodoConsultaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ClasseCRUDDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnTabela;
            
            private System.Data.DataColumn columnOpcoes;
            
            private System.Data.DataColumn columnNomeClasse;
            
            private System.Data.DataColumn columnProvider;
            
            private System.Data.DataColumn columnStringConexao;
            
            private System.Data.DataColumn columnNameSpace;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDDataTable() {
                this.TableName = "ClasseCRUD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClasseCRUDDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ClasseCRUDDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TabelaColumn {
                get {
                    return this.columnTabela;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OpcoesColumn {
                get {
                    return this.columnOpcoes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NomeClasseColumn {
                get {
                    return this.columnNomeClasse;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ProviderColumn {
                get {
                    return this.columnProvider;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StringConexaoColumn {
                get {
                    return this.columnStringConexao;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameSpaceColumn {
                get {
                    return this.columnNameSpace;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRow this[int index] {
                get {
                    return ((ClasseCRUDRow)(this.Rows[index]));
                }
            }
            
            public event ClasseCRUDRowChangeEventHandler ClasseCRUDRowChanging;
            
            public event ClasseCRUDRowChangeEventHandler ClasseCRUDRowChanged;
            
            public event ClasseCRUDRowChangeEventHandler ClasseCRUDRowDeleting;
            
            public event ClasseCRUDRowChangeEventHandler ClasseCRUDRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddClasseCRUDRow(ClasseCRUDRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRow AddClasseCRUDRow(System.Guid ID, string Tabela, string Opcoes, string NomeClasse, string Provider, string StringConexao, string NameSpace) {
                ClasseCRUDRow rowClasseCRUDRow = ((ClasseCRUDRow)(this.NewRow()));
                rowClasseCRUDRow.ItemArray = new object[] {
                        ID,
                        Tabela,
                        Opcoes,
                        NomeClasse,
                        Provider,
                        StringConexao,
                        NameSpace};
                this.Rows.Add(rowClasseCRUDRow);
                return rowClasseCRUDRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ClasseCRUDDataTable cln = ((ClasseCRUDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ClasseCRUDDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTabela = base.Columns["Tabela"];
                this.columnOpcoes = base.Columns["Opcoes"];
                this.columnNomeClasse = base.Columns["NomeClasse"];
                this.columnProvider = base.Columns["Provider"];
                this.columnStringConexao = base.Columns["StringConexao"];
                this.columnNameSpace = base.Columns["NameSpace"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTabela = new System.Data.DataColumn("Tabela", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTabela);
                this.columnOpcoes = new System.Data.DataColumn("Opcoes", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpcoes);
                this.columnNomeClasse = new System.Data.DataColumn("NomeClasse", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomeClasse);
                this.columnProvider = new System.Data.DataColumn("Provider", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvider);
                this.columnStringConexao = new System.Data.DataColumn("StringConexao", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStringConexao);
                this.columnNameSpace = new System.Data.DataColumn("NameSpace", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameSpace);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRow NewClasseCRUDRow() {
                return ((ClasseCRUDRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ClasseCRUDRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ClasseCRUDRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ClasseCRUDRowChanged != null)) {
                    this.ClasseCRUDRowChanged(this, new ClasseCRUDRowChangeEvent(((ClasseCRUDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ClasseCRUDRowChanging != null)) {
                    this.ClasseCRUDRowChanging(this, new ClasseCRUDRowChangeEvent(((ClasseCRUDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ClasseCRUDRowDeleted != null)) {
                    this.ClasseCRUDRowDeleted(this, new ClasseCRUDRowChangeEvent(((ClasseCRUDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ClasseCRUDRowDeleting != null)) {
                    this.ClasseCRUDRowDeleting(this, new ClasseCRUDRowChangeEvent(((ClasseCRUDRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveClasseCRUDRow(ClasseCRUDRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EstruturaSaveRAD ds = new EstruturaSaveRAD();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ClasseCRUDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MetodoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnOpcoes;
            
            private System.Data.DataColumn columnNomeMetodo;
            
            private System.Data.DataColumn columnIDClasse;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoDataTable() {
                this.TableName = "Metodo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MetodoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MetodoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OpcoesColumn {
                get {
                    return this.columnOpcoes;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NomeMetodoColumn {
                get {
                    return this.columnNomeMetodo;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDClasseColumn {
                get {
                    return this.columnIDClasse;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow this[int index] {
                get {
                    return ((MetodoRow)(this.Rows[index]));
                }
            }
            
            public event MetodoRowChangeEventHandler MetodoRowChanging;
            
            public event MetodoRowChangeEventHandler MetodoRowChanged;
            
            public event MetodoRowChangeEventHandler MetodoRowDeleting;
            
            public event MetodoRowChangeEventHandler MetodoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMetodoRow(MetodoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow AddMetodoRow(System.Guid ID, string Opcoes, string NomeMetodo, ClasseCRUDRow parentClasseCRUDRowByClasseCRUD_Metodo) {
                MetodoRow rowMetodoRow = ((MetodoRow)(this.NewRow()));
                rowMetodoRow.ItemArray = new object[] {
                        ID,
                        Opcoes,
                        NomeMetodo,
                        parentClasseCRUDRowByClasseCRUD_Metodo[0]};
                this.Rows.Add(rowMetodoRow);
                return rowMetodoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                MetodoDataTable cln = ((MetodoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new MetodoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnOpcoes = base.Columns["Opcoes"];
                this.columnNomeMetodo = base.Columns["NomeMetodo"];
                this.columnIDClasse = base.Columns["IDClasse"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnOpcoes = new System.Data.DataColumn("Opcoes", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpcoes);
                this.columnNomeMetodo = new System.Data.DataColumn("NomeMetodo", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomeMetodo);
                this.columnIDClasse = new System.Data.DataColumn("IDClasse", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDClasse);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.Unique = true;
                this.columnIDClasse.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow NewMetodoRow() {
                return ((MetodoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new MetodoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(MetodoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MetodoRowChanged != null)) {
                    this.MetodoRowChanged(this, new MetodoRowChangeEvent(((MetodoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MetodoRowChanging != null)) {
                    this.MetodoRowChanging(this, new MetodoRowChangeEvent(((MetodoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MetodoRowDeleted != null)) {
                    this.MetodoRowDeleted(this, new MetodoRowChangeEvent(((MetodoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MetodoRowDeleting != null)) {
                    this.MetodoRowDeleting(this, new MetodoRowChangeEvent(((MetodoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMetodoRow(MetodoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EstruturaSaveRAD ds = new EstruturaSaveRAD();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MetodoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VersaoDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnNumero;
            
            private System.Data.DataColumn columnUsuario;
            
            private System.Data.DataColumn columnMaquina;
            
            private System.Data.DataColumn columnData;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoDataTable() {
                this.TableName = "Versao";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VersaoDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VersaoDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UsuarioColumn {
                get {
                    return this.columnUsuario;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MaquinaColumn {
                get {
                    return this.columnMaquina;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DataColumn {
                get {
                    return this.columnData;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoRow this[int index] {
                get {
                    return ((VersaoRow)(this.Rows[index]));
                }
            }
            
            public event VersaoRowChangeEventHandler VersaoRowChanging;
            
            public event VersaoRowChangeEventHandler VersaoRowChanged;
            
            public event VersaoRowChangeEventHandler VersaoRowDeleting;
            
            public event VersaoRowChangeEventHandler VersaoRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVersaoRow(VersaoRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoRow AddVersaoRow(string Numero, string Usuario, string Maquina, System.DateTime Data) {
                VersaoRow rowVersaoRow = ((VersaoRow)(this.NewRow()));
                rowVersaoRow.ItemArray = new object[] {
                        Numero,
                        Usuario,
                        Maquina,
                        Data};
                this.Rows.Add(rowVersaoRow);
                return rowVersaoRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                VersaoDataTable cln = ((VersaoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new VersaoDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNumero = base.Columns["Numero"];
                this.columnUsuario = base.Columns["Usuario"];
                this.columnMaquina = base.Columns["Maquina"];
                this.columnData = base.Columns["Data"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNumero = new System.Data.DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnUsuario = new System.Data.DataColumn("Usuario", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsuario);
                this.columnMaquina = new System.Data.DataColumn("Maquina", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaquina);
                this.columnData = new System.Data.DataColumn("Data", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnData);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoRow NewVersaoRow() {
                return ((VersaoRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new VersaoRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(VersaoRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VersaoRowChanged != null)) {
                    this.VersaoRowChanged(this, new VersaoRowChangeEvent(((VersaoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VersaoRowChanging != null)) {
                    this.VersaoRowChanging(this, new VersaoRowChangeEvent(((VersaoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VersaoRowDeleted != null)) {
                    this.VersaoRowDeleted(this, new VersaoRowChangeEvent(((VersaoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VersaoRowDeleting != null)) {
                    this.VersaoRowDeleting(this, new VersaoRowChangeEvent(((VersaoRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVersaoRow(VersaoRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                EstruturaSaveRAD ds = new EstruturaSaveRAD();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VersaoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListaCamposRow : System.Data.DataRow {
            
            private ListaCamposDataTable tableListaCampos;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListaCamposRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListaCampos = ((ListaCamposDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    try {
                        return ((System.Guid)(this[this.tableListaCampos.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'ListaCampos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaCampos.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid IDMetodo {
                get {
                    return ((System.Guid)(this[this.tableListaCampos.IDMetodoColumn]));
                }
                set {
                    this[this.tableListaCampos.IDMetodoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nome {
                get {
                    return ((string)(this[this.tableListaCampos.NomeColumn]));
                }
                set {
                    this[this.tableListaCampos.NomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow MetodoRow {
                get {
                    return ((MetodoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Metodo_ListaCampos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Metodo_ListaCampos"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableListaCampos.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableListaCampos.IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MetodoConsultaRow : System.Data.DataRow {
            
            private MetodoConsultaDataTable tableMetodoConsulta;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MetodoConsultaRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMetodoConsulta = ((MetodoConsultaDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    try {
                        return ((System.Guid)(this[this.tableMetodoConsulta.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'MetodoConsulta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMetodoConsulta.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SQL {
                get {
                    return ((string)(this[this.tableMetodoConsulta.SQLColumn]));
                }
                set {
                    this[this.tableMetodoConsulta.SQLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomeConsulta {
                get {
                    return ((string)(this[this.tableMetodoConsulta.NomeConsultaColumn]));
                }
                set {
                    this[this.tableMetodoConsulta.NomeConsultaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String {
                get {
                    return ((string)(this[this.tableMetodoConsulta.StringColumn]));
                }
                set {
                    this[this.tableMetodoConsulta.StringColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    return ((string)(this[this.tableMetodoConsulta.ProviderColumn]));
                }
                set {
                    this[this.tableMetodoConsulta.ProviderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMetodoConsulta.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMetodoConsulta.IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ClasseCRUDRow : System.Data.DataRow {
            
            private ClasseCRUDDataTable tableClasseCRUD;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ClasseCRUDRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableClasseCRUD = ((ClasseCRUDDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    return ((System.Guid)(this[this.tableClasseCRUD.IDColumn]));
                }
                set {
                    this[this.tableClasseCRUD.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tabela {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.TabelaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Tabela\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.TabelaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Opcoes {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.OpcoesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Opcoes\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.OpcoesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomeClasse {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.NomeClasseColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NomeClasse\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.NomeClasseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Provider {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.ProviderColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Provider\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.ProviderColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StringConexao {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.StringConexaoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StringConexao\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.StringConexaoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameSpace {
                get {
                    try {
                        return ((string)(this[this.tableClasseCRUD.NameSpaceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NameSpace\' in table \'ClasseCRUD\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableClasseCRUD.NameSpaceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTabelaNull() {
                return this.IsNull(this.tableClasseCRUD.TabelaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTabelaNull() {
                this[this.tableClasseCRUD.TabelaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpcoesNull() {
                return this.IsNull(this.tableClasseCRUD.OpcoesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpcoesNull() {
                this[this.tableClasseCRUD.OpcoesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeClasseNull() {
                return this.IsNull(this.tableClasseCRUD.NomeClasseColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeClasseNull() {
                this[this.tableClasseCRUD.NomeClasseColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProviderNull() {
                return this.IsNull(this.tableClasseCRUD.ProviderColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProviderNull() {
                this[this.tableClasseCRUD.ProviderColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStringConexaoNull() {
                return this.IsNull(this.tableClasseCRUD.StringConexaoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStringConexaoNull() {
                this[this.tableClasseCRUD.StringConexaoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameSpaceNull() {
                return this.IsNull(this.tableClasseCRUD.NameSpaceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameSpaceNull() {
                this[this.tableClasseCRUD.NameSpaceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow[] GetMetodoRows() {
                return ((MetodoRow[])(base.GetChildRows(this.Table.ChildRelations["ClasseCRUD_Metodo"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MetodoRow : System.Data.DataRow {
            
            private MetodoDataTable tableMetodo;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MetodoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMetodo = ((MetodoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid ID {
                get {
                    try {
                        return ((System.Guid)(this[this.tableMetodo.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'Metodo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMetodo.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Opcoes {
                get {
                    try {
                        return ((string)(this[this.tableMetodo.OpcoesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Opcoes\' in table \'Metodo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMetodo.OpcoesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NomeMetodo {
                get {
                    try {
                        return ((string)(this[this.tableMetodo.NomeMetodoColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NomeMetodo\' in table \'Metodo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMetodo.NomeMetodoColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid IDClasse {
                get {
                    return ((System.Guid)(this[this.tableMetodo.IDClasseColumn]));
                }
                set {
                    this[this.tableMetodo.IDClasseColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRow ClasseCRUDRow {
                get {
                    return ((ClasseCRUDRow)(this.GetParentRow(this.Table.ParentRelations["ClasseCRUD_Metodo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ClasseCRUD_Metodo"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableMetodo.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableMetodo.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpcoesNull() {
                return this.IsNull(this.tableMetodo.OpcoesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpcoesNull() {
                this[this.tableMetodo.OpcoesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNomeMetodoNull() {
                return this.IsNull(this.tableMetodo.NomeMetodoColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNomeMetodoNull() {
                this[this.tableMetodo.NomeMetodoColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRow[] GetListaCamposRows() {
                return ((ListaCamposRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Metodo_ListaCampos"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VersaoRow : System.Data.DataRow {
            
            private VersaoDataTable tableVersao;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VersaoRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVersao = ((VersaoDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tableVersao.NumeroColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Numero\' in table \'Versao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersao.NumeroColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Usuario {
                get {
                    try {
                        return ((string)(this[this.tableVersao.UsuarioColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Usuario\' in table \'Versao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersao.UsuarioColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Maquina {
                get {
                    try {
                        return ((string)(this[this.tableVersao.MaquinaColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Maquina\' in table \'Versao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersao.MaquinaColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Data {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableVersao.DataColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Data\' in table \'Versao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVersao.DataColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumeroNull() {
                return this.IsNull(this.tableVersao.NumeroColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumeroNull() {
                this[this.tableVersao.NumeroColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsuarioNull() {
                return this.IsNull(this.tableVersao.UsuarioColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsuarioNull() {
                this[this.tableVersao.UsuarioColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaquinaNull() {
                return this.IsNull(this.tableVersao.MaquinaColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaquinaNull() {
                this[this.tableVersao.MaquinaColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataNull() {
                return this.IsNull(this.tableVersao.DataColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataNull() {
                this[this.tableVersao.DataColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListaCamposRowChangeEvent : System.EventArgs {
            
            private ListaCamposRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRowChangeEvent(ListaCamposRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListaCamposRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MetodoConsultaRowChangeEvent : System.EventArgs {
            
            private MetodoConsultaRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaRowChangeEvent(MetodoConsultaRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoConsultaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ClasseCRUDRowChangeEvent : System.EventArgs {
            
            private ClasseCRUDRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRowChangeEvent(ClasseCRUDRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ClasseCRUDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MetodoRowChangeEvent : System.EventArgs {
            
            private MetodoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRowChangeEvent(MetodoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MetodoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VersaoRowChangeEvent : System.EventArgs {
            
            private VersaoRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoRowChangeEvent(VersaoRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VersaoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591